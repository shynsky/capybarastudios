---
import type { ItemGrid as Props } from '~/types';
import { twMerge } from 'tailwind-merge';
import Button from './Button.astro';
import { Icon } from 'astro-icon/components';

const { items = [], columns, defaultIcon = '', classes = {} } = Astro.props;

const {
  container: containerClass = '',
  panel: panelClass = '',
  title: titleClass = '',
  description: descriptionClass = '',
  icon: defaultIconClass = 'text-primary',
  action: actionClass = '',
} = classes;
---

{
  items && items.length > 0 && (
    <div
      class={twMerge(
        `grid mx-auto gap-8 md:gap-y-12 ${
          columns === 4
            ? 'lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-2'
            : columns === 3
              ? 'lg:grid-cols-3 sm:grid-cols-2'
              : columns === 2
                ? 'sm:grid-cols-2 '
                : ''
        }`,
        containerClass
      )}
      x-data="{ open: null }"
    >
      {items.map((item, idx) => (
        <div class="intersect-once motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade">
          <div class={twMerge('flex flex-row max-w-md', panelClass, item.classes?.panel)}>
            <div class="flex justify-center">
              {(item.icon || defaultIcon) && (
                <Icon
                  name={item.icon || defaultIcon}
                  class={twMerge('w-7 h-7 mr-2 rtl:mr-0 rtl:ml-2', defaultIconClass, item.classes?.icon)}
                />
              )}
            </div>
            <div class="mt-0.5 w-full">
              <button
                class={twMerge('text-xl font-bold w-full text-left focus:outline-none', titleClass, item.classes?.title)}
                @click={`open === ${idx} ? open = null : open = ${idx}`}
                :aria-expanded={`open === ${idx}`}
                type="button"
              >
                {item.title}
              </button>
              <div
                x-show={`open === ${idx}`}
                x-transition:enter="transition ease-out duration-300"
                x-transition:enter-start="opacity-0 max-h-0"
                x-transition:enter-end="opacity-100 max-h-96"
                x-transition:leave="transition ease-in duration-200"
                x-transition:leave-start="opacity-100 max-h-96"
                x-transition:leave-end="opacity-0 max-h-0"
                class={twMerge(`${item.title ? 'mt-3' : ''} text-muted overflow-hidden`, descriptionClass, item.classes?.description)}
                x-cloak
              >
                {item.description && (
                  <p set:html={item.description} />
                )}
                {item.callToAction && (
                  <div class={twMerge(`${item.title || item.description ? 'mt-3' : ''}`, actionClass, item.classes?.actionClass)}>
                    <Button variant="link" {...item.callToAction} />
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
  )
}
